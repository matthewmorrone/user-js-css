{"libs":[{"name":"jQuery 3","src":"@extension@jquery.min.js"},{"name":"jQuery UI 1.12.1","src":"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.js"},{"name":"Sortable","src":"https://cdn.jsdelivr.net/npm/sortablejs@1.6.1/Sortable.min.js"},{"name":"jQuery UI css","src":"https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css"}],"settings":{"badgeCounter":false,"editorConfig":{"enableBasicAutocompletion":false,"enableLiveAutocompletion":true,"enableSnippets":true,"fontSize":15,"highlightActiveLine":false,"keyboardHandler":false,"showPrintMargin":false,"tabSize":4,"theme":"ace/theme/chrome","useSoftTabs":true,"useWorker":true,"wrap":true},"supportBtn":true,"themesFolder":["chrome","clouds","dawn","dracula","dreamweaver","eclipse","github","monokai","solarized_dark","solarized_light","textmate","tomorrow","tomorrow_night","twilight"],"version":8},"sites":[{"compiledCss":"#xwd-ad-top, #xwd-header, #xwd-mobile-cushion, [class^=\"Ad-ad\"] {display: none!important;}.unit .cell-wrapper {border: 5px solid rgb(255, 136, 136)!important;}.red {color: red!important;}.sudoku-grid table .confirmed .guess {color: rgb(0, 0, 0)!important;}","css":"#xwd-ad-top, #xwd-header, #xwd-mobile-cushion,\n\n[class^=Ad-ad] {\n\tdisplay: none;\n}\n.unit .cell-wrapper {\n\tborder: 5px solid #ff8888;\n}\n.red {\n\tcolor: red;\n}\n.sudoku-grid table .confirmed .guess {\n    color: #000000;\n}","id":"https://www.nytimes.com/crosswords/","js":"","libs":["jQuery 3"],"options":{"altCSS":true,"altJS":false,"autoImportant":true,"on":true}},{"compiledCss":"::-webkit-scrollbar {display: none!important;}.inert {float: right!important; margin-right: 200px!important;}.blurred {filter: blur(3px)!important;}.sudoku-grid {overflow: unset!important;}pre {float: right!important; margin-left: -200px!important;}","css":"::-webkit-scrollbar {\n\tdisplay: none;\n}\n.inert {\n\tfloat: right;\n    margin-right: 200px;\n}\n.blurred {\n\tfilter: blur(3px);\n}\n.sudoku-grid {\n    overflow: unset; \n}\npre {\n    float: right;\n    margin-left: -200px;\n}","id":"https://www.nytimes.com/crosswords/game/sudoku/","js":"console.clear()\r\nfunction jquery() {\r\n    var jq = document.createElement('script');\r\n    jq.src = \"https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js\";\r\n    document.getElementsByTagName('head')[0].appendChild(jq);\r\n}\r\nObject.defineProperty(Object.prototype, \"define\", {\r\n    configurable: true,\r\n    enumerable: false,\r\n    writable: true,\r\n    value: function(name, value) {\r\n        if (Object[name]) {\r\n            delete Object[name]\r\n        }\r\n        Object.defineProperty(this, name, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            writable: true,\r\n            value: value\r\n        })\r\n        return this\r\n    }\r\n})\r\nObject.prototype.define(\"pick\", function() {\r\n    var keys = Object.keys();\r\n    return this[keys[Math.floor((Math.random() * keys.length))]];\r\n})\r\nString.prototype.define(\"hashCode\", function() {\r\n    var hash = 0;\r\n    if (this.length == 0) {\r\n        return hash;\r\n    }\r\n    for (var i = 0; i < this.length; i++) {\r\n        var char = this.charCodeAt(i);\r\n        hash = ((hash<<5)-hash)+char;\r\n        hash = hash & hash; \r\n    }\r\n    return hash;\r\n})\r\nArray.prototype.define(\"compress\", function() {\r\n    var original = this, compressed = []\r\n    for (var i = 0; i < original.length; i++) {\r\n        if (!compressed[original[i]]) {\r\n            compressed[original[i]] = [original[i], 1]\r\n        }\r\n        else {\r\n            compressed[original[i]][1]++\r\n        }\r\n    }\r\n    for (var i = 1; i < 10; i++) {\r\n        if (!compressed[i]) {\r\n            compressed[i] = [i+\"\", 0]\r\n        }\r\n    }\r\n    return compressed.sort().clean()//.map(p => p.join())   \r\n})\r\nArray.prototype.define(\"clean\", function(deleteValue) {\r\n    for (var i = 0; i < this.length; i++) {\r\n        if (this[i] == deleteValue) {           \r\n            this.splice(i, 1);\r\n            i--;\r\n        }\r\n    }\r\n    return this;\r\n})\r\nfunction* generator(start = 0, end = Infinity, step = 1) {\r\n    let n = 0;\r\n    for (let i = start; i < end; i += step) {\r\n        n += 1;\r\n        yield i;\r\n    }\r\n    return n;\r\n}\r\nfunction reset() {\r\n    $('.complete-set').removeClass('complete-set')\r\n    $('.sudoku-grid table').find('.grid-square').not('.prefilled').each(function() {\r\n        $(this).find('.guess').empty()\r\n    })\r\n}\r\nfunction serialize() {\r\n    $('.sudoku-grid table').find('.grid-square').not('.prefilled').each(function() {\r\n        $(this).find('.guess').text(0)\r\n    })\r\n    var result = $('.sudoku-grid table .guess').text()\r\n    reset()\r\n    return result\r\n}\r\nfunction saturate() {\r\n    $('.candidate').each(function() {\r\n        $(this).addClass('available')\r\n    })\r\n}\r\nfunction getRows() {\r\n    return [getRow(0), getRow(1), getRow(2), \r\n            getRow(3), getRow(4), getRow(5), \r\n            getRow(6), getRow(7), getRow(8)]\r\n    return $('.sudoku-grid > table > tbody > tr')\r\n}\r\nfunction getRow(i) {\r\n    return $('.sudoku-grid > table > tbody > tr').eq(i).find('.grid-square')\r\n}\r\nfunction getCols() {\r\n    return [getCol(0), getCol(1), getCol(2), \r\n            getCol(3), getCol(4), getCol(5), \r\n            getCol(6), getCol(7), getCol(8)]\r\n    var cols = [[],[],[],[],[],[],[],[],[]]\r\n    $('.sudoku-grid > table > tbody > tr').each(function() {\r\n        $(this).children(\"td\").each(function(j) {\r\n            cols[j].push($(this))\r\n        })\r\n    })\r\n    return cols\r\n}\r\nfunction getCol(j) {\r\n    return $('.sudoku-grid > table > tbody > tr').map(function() {\r\n        return $(this).children(\"td\").eq(j).get(0)\r\n    })\r\n}\r\nfunction getSecs() {\r\n    return [getSec(0), getSec(1), getSec(2), \r\n            getSec(3), getSec(4), getSec(5), \r\n            getSec(6), getSec(7), getSec(8)]\r\n}\r\nfunction getSec(k) {\r\n    var coords = [Math.floor(k / 3), k % 3].map(x => [x*3, x*3+3])\r\n    var sec = $('.sudoku-grid > table > tbody > tr').slice(coords[0][0], coords[0][1]).map(function() {\r\n        return $(this).children(\"td\").slice(coords[1][0], coords[1][1])\r\n    })\r\n    sec = $.merge(sec[0], $.merge(sec[1], sec[2]))\r\n    // sec = [...sec[0], ...sec[1], ...sec[2]]\r\n    return sec\r\n}\r\nfunction getSquare(i, j) {\r\n    return $('.sudoku-grid > table > tbody > tr').eq(i).children(\"td\").eq(j)\r\n}\r\nfunction setSquare(i, j, guess) {\r\n    $('.sudoku-grid > table > tbody > tr').eq(i).children(\"td\").eq(j).find(\".guess\").text(guess)\r\n}\r\nfunction getCandidates(area) {\r\n    return area.find(\".available:visible\")\r\n}\r\nfunction unique(arr) {\r\n    return arr.filter((v, i, a) => a.indexOf(v) === i)\r\n}\r\nfunction checkForSingle(squares) {\r\n    var hasSingle = false\r\n    for (let i of generator(0, 9)) {\r\n        if (squares[i][1] === 1) {\r\n            hasSingle = squares[i]\r\n        }\r\n    }\r\n    return hasSingle\r\n}\r\nfunction checkForPairs(squares) {\r\n    var pairs = []\r\n    for (let i of generator(0, 9)) {\r\n        if (getCandidates($(squares[i])).length === 2) {\r\n            for (let j of generator(0, 9)) {\r\n                if (i == j) continue\r\n                if (getCandidates($(squares[j])).length === 2) {\r\n                    if (getCandidates($(squares[i])).text() == getCandidates($(squares[j])).text()) {\r\n                        pairs.push([squares[i], squares[j]])\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (pairs.length) return Array.from(new Set(pairs))\r\n}\r\nfunction singles(out) {\r\n    let stuff, result = []\r\n    if (out) {\r\n        // result.push([\"Singles\"])\r\n        result.push([/*\"\\t\", */\"Units\"])\r\n    }\r\n    else {\r\n        console.group(\"Singles\")\r\n        console.group(\"Units\")\r\n\t}\r\n\r\n\t$('.sudoku-grid table').find(\".available:visible\").css(\"color\", '')\r\n    $('.sudoku-grid table').find('.grid-square').each(function() {\r\n        if ($(this).find(\".available:visible\").length === 1) {\r\n            if (out) {\r\n                result.push([/*\"\\t\", */Number.parseInt($(this).find(\".available:visible\").text(), 10), \"!\"])\r\n            }\r\n            else {\r\n            \tconsole.log(Number.parseInt($(this).find(\".available:visible\").text(), 10), \"!\")\r\n        \t}\r\n        }\r\n    })\r\n    if (out) {\r\n        // result.push([\"\\t\", \"UnitsEnd\"])\r\n        result.push([/*\"\\t\", */\"Rows\"])   \r\n    }\r\n    else {\r\n        console.groupEnd()\r\n        console.group(\"Rows\")    \t\r\n\t}\r\n    for (let i of generator(0, 9)) {\r\n        stuff = getCandidates(getRow(i))\r\n        stuff = $(stuff).map((x, y) => $(y).text()).toArray()\r\n        stuff = stuff.compress()\r\n        if (checkForSingle(stuff)) {\r\n            if (out) {\r\n                result.push([/*\"\\t\", */\"Row\", i+1, \"has a single\", checkForSingle(stuff)[0]])\r\n            }\r\n            else {\r\n            \tconsole.log(\"Row\", i+1, \"has a single\", checkForSingle(stuff)[0])\r\n        \t}\r\n            \r\n        }\r\n    }\r\n    if (out) {\r\n        // result.push([\"\\t\", \"RowsEnd\"])\r\n        result.push([/*\"\\t\", */\"Cols\"])\r\n    }\r\n    else {\r\n        console.groupEnd()\r\n        console.group(\"Cols\")    \t\r\n\t}\r\n\r\n    for (let j of generator(0, 9)) {\r\n        stuff = getCandidates(getCol(j))\r\n        stuff = $(stuff).map((x, y) => $(y).text()).toArray()\r\n        stuff = stuff.compress()\r\n        if (checkForSingle(stuff)) {\r\n            if (out) {\r\n                result.push([/*\"\\t\", */\"Col\", j+1, \"has a single\", checkForSingle(stuff)[0]])\r\n            }\r\n            else {\r\n            \tconsole.log(\"Col\", j+1, \"has a single\", checkForSingle(stuff)[0])\r\n        \t}\r\n        }\r\n    }\r\n    if (out) {\r\n        // result.push([\"\\t\", \"ColsEnd\"])\r\n        result.push([/*\"\\t\", */\"Sectors\"])\r\n    }\r\n    else {\r\n        console.groupEnd()\r\n        console.group(\"Sectors\")    \t\r\n\t}\r\n\r\n    for (let k of generator(0, 9)) {\r\n        stuff = getCandidates(getSec(k))\r\n        stuff = $(stuff).map((x, y) => $(y).text()).toArray()\r\n        stuff = stuff.compress()\r\n        if (checkForSingle(stuff)) {\r\n            if (out) {\r\n                result.push([/*\"\\t\", */\"Sec\", k+1, \"has a single\", checkForSingle(stuff)[0]])\r\n            }\r\n            else {\r\n            \tconsole.log(\"Sec\", k+1, \"has a single\", checkForSingle(stuff)[0])\r\n        \t}\r\n        }\r\n    }\r\n    if (out) {\r\n        // result.push([\"\\t\", \"SecsEnd\"])\r\n        // result.push([\"End\"])\r\n        return result\r\n    }\r\n    else {\r\n        console.groupEnd()\r\n        console.groupEnd()    \t\r\n\t}\r\n\r\n}\r\nfunction pairs() {\r\n    let pairs = [], thing\r\n    console.groupCollapsed(\"Pairs\")\r\n    console.group(\"Rows\")\r\n\tfor (let i of generator(0, 9)) {\r\n        thing = getRow(i)\r\n        if (checkForPairs(thing)) console.log(i+1, checkForPairs(thing))\r\n\t}\r\n    console.groupEnd()\r\n    console.group(\"Columns\")\r\n    for (let j of generator(0, 9)) {\r\n        thing = getCol(j)\r\n\t\tif (checkForPairs(thing)) console.log(j+1, checkForPairs(thing))\r\n    }\r\n    console.groupEnd()\r\n    console.group(\"Sectors\")\r\n    for (let k of generator(0, 9)) {\r\n        thing = getSec(k)\r\n\t\tif (checkForPairs(thing)) console.log(k+1, checkForPairs(thing))\r\n    }\r\n    console.groupEnd()\r\n    console.groupEnd()\r\n    return pairs\r\n}\r\n\r\nfunction highlight() {\r\n\t$(\".available:visible\").each(function(x, y) {\r\n\t\tswitch (y.innerText) {\r\n\t\t\tcase \"1\": color = \"FF0000\"; break;\r\n\t\t\tcase \"2\": color = \"008000\"; break;\r\n\t\t\tcase \"3\": color = \"0000FF\"; break;\r\n\t\t\tcase \"4\": color = \"FF8000\"; break;\r\n\t\t\tcase \"5\": color = \"FF00FF\"; break;\r\n\t\t\tcase \"6\": color = \"008080\";\tbreak;\r\n\t\t\tcase \"7\": color = \"FF8000\"; break;\r\n\t\t\tcase \"8\": color = \"808000\"; break;\r\n\t\t\tcase \"9\": color = \"0080FF\"; break;\r\n\t\t}\r\n\t\t$(this).css(\"color\", \"#\"+color)\r\n\t})\r\n}\r\nfunction hover() {\r\n\t$(\".grid-square\").hover(function() {\r\n\t\tvar guess = $(this).find('.guess').text()\r\n\t\t$('.candidate.available').removeClass('red')\r\n\t\tif (guess != \"\") {\r\n\t\t\t$('.candidate.available').filter((x, y) => y.innerText == guess).addClass('red')\r\n\t\t}\r\n\t}, function() {\r\n\t\t$('.candidate.available').removeClass('red')\r\n\t})\r\n\r\n\t$('.active').removeClass('active')\r\n    $('.grid-square').hover(function() {\r\n    \t$(this).addClass('active').focus().click()\r\n    }, function() {\r\n    \t$(this).removeClass('active').blur()\r\n    })\r\n}\r\n\r\nfunction stuff() {\r\n\tconsole.clear()\r\n\tif (!$(\"#automatic-candidates\").is(':checked')) {\r\n\t\t$(\"#automatic-candidates\").click()\r\n\t}\r\n\tsingles()\r\n// \tlet output = singles(true)\r\n// \t$(\"pre\").text(output.map(x => x.join(\"\\t\")).join(\"\\n\"))\r\n\r\n\t$('.confirmed').removeClass(\"confirmed\")\r\n\t$('.revealed').removeClass(\"revealed\")\r\n\t$('.modified').removeClass(\"modified\")\r\n\t$('.checked').removeClass(\"checked\")\r\n}\r\n\r\n$(function() {\r\n    setTimeout(function() {\r\n        $(\".game-toolbar\").after(inertMenu()).after(\"<pre></pre>\")\r\n    \tstuff()\r\n    \t$(document).off('keyup')\r\n\t\t$(document).on('keyup', function() {\r\n\t\t\tstuff()\r\n\t\t})\r\n\t\t$('.candidate').on('click', function(e) {\r\n\t\t\tif (!$(this).parents('.grid-square').hasClass('active')) {return}\r\n\t\t\tsetTimeout(stuff, 100)\r\n\t\t})\r\n\t\t\r\n\t\t$('.inert option').mousedown(function(e) {\r\n\t\t    e.preventDefault()\r\n\t\t    $(this).prop('selected', !$(this).prop('selected'))\r\n\t\t\tsetInert()\r\n\t\t    return false\r\n\t\t})\r\n    }, 1000)\r\n})\r\n\r\n\r\n\r\n\r\n\r\nfunction inertMenu() {\r\n\tlet $select = $(`<select multiple class='inert' size=9></select>`)\r\n\tfor (let i of generator(0, 9)) {\r\n\t\t$select.append($(`<option value=\"${i}\">${i+1}</option>`))\r\n\t}\r\n\treturn $select\r\n}\r\nfunction setInert() {\r\n\tlet stuff = $('.inert option:checked').map(function() {return $(this).val()}).toArray()\r\n\t$(\".blurred\").removeClass(\"blurred\")\r\n\t$(stuff).each(function(k, v) {\r\n\t\tgetSec(v).each(function() {\r\n\t\t\t$(this).addClass(\"blurred\")\r\n\t\t})\r\n\t})\r\n}\r\n","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":true,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"cdnjs.com","js":"\n\n$(`.version-dropdown`).prepend($(`\n<select class='extension form-control'>\n<option value='js'>JS</option>\n<option value='css'>CSS</option>\n<option value='png'>PNG</option>\n</select>\n`))\n\n\n$(document).on(\"change\", \".extension\", function() {\n\tlet ext = $(this).val()\n\t$(`.library-table-container tr`).show().filter(function() {\n\t\treturn !$(this).attr(`class`).includes(ext)\n\t}).hide()\n})\n\n$(`.library-table-container tr`).show().filter(function() {\n\treturn !$(this).attr(`class`).includes(\"js\")\n}).hide()","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":true,"autoImportant":false,"on":true}},{"compiledCss":"body {position: static!important; margin-left: 0px !important;}#topContainer, #bottom {display: none!important;}#middleContainer {margin-top: 0px!important; margin-right: 0px!important; margin-bottom: 0px!important; padding: 0px!important; margin-left: 0px !important;}","css":"body {\n\tposition: static;\n\tmargin-left: 0px !important;\n}\n\n#topContainer, #bottom {\n\tdisplay: none;\n}\n#middleContainer {\n\tmargin-left: 0px !important;\n\tmargin: 0px;\n\tpadding: 0px;\n}","id":"xkcd.com","js":"function escape(string) {\r\n\treturn string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n}\r\n$.fn.center = function() {\r\n    $(this).css({\r\n    \tposition: \"absolute\",\r\n        left: ($(window).width()  / 2) - ($(this).width()  / 2) + \"px\",\r\n        top:  ($(window).height() / 2) - ($(this).height() / 2) + \"px\"\r\n    })\r\n    return $(this)\r\n}\r\n\r\n$(function() {\r\n\t$(\"#middleContainer\").center()\r\n\t\r\n\t$(window).resize(function() {$(\"#middleContainer\").center()})\r\n\t\r\n\tif ($('[rel=\"next\"]').attr(\"href\") === \"#\") {\r\n\t\t$('[rel=\"next\"]').hide()\r\n\t}\r\n\r\n\tlet state = {}\r\n\tlet title = document.title\r\n\tlet regex = /Permanent link to this comic: (https:\\/\\/xkcd.com\\/\\d+\\/)/\r\n\tlet url = $(\"#middleContainer\").text().match(regex)[1]\r\n\thistory.pushState(state, title, url)\r\n    \r\n\t$(\"#middleContainer\").contents().filter(function() {\r\n    \treturn this.nodeType === 3\r\n\t}).remove()\r\n\t$(\"br\").remove()\r\n\t\r\n// \t\r\n\tconsole.log($(\"#comic img\").attr(\"title\"));\r\n\t\r\n\tconsole.log($(\".comicNav:eq(0) li\"));\r\n\t\r\n\t\r\n\tvar width = $(\".comicNav:eq(0) li\").map(function(undefined, elem) {\r\n        return $(elem).outerWidth(true);\r\n    }).toArray().reduce(function(prev, curr) {\r\n        return prev + curr;\r\n    }, 0);\r\n    \r\n    $(\"#comic img\").after(\"<div style='width: \"+width+\"px; margin: auto;'>\"+$(\"#comic img\").attr(\"title\")+\"</div>\")\r\n})","libs":["jQuery 3"],"options":{"altCSS":true,"altJS":true,"autoImportant":true,"on":true}},{"compiledCss":"","css":"","id":"github.com","js":"$(function() {\n\t$(\".js-quicksearch-field\").val(\"user:matthewmorrone \").focus()\n\t$(\".js-quicksearch-field\").one(\"keydown\", function(e) {\n\t\tif (e.which === 8) {\n\t\t\t$(\".js-quicksearch-field\").val(\"\")\n\t\t}\n\t})\n})","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":".ego_section, #pagelet_ego_pane, .escapeHatchMinimal {display: none!important;}","css":".ego_section, #pagelet_ego_pane,\n.escapeHatchMinimal {\n\t\n\tdisplay: none;\n}","id":"facebook.com","js":"// window.location.href = 'https://www.messenger.com'\n\n\n// setTimeout(function() {\n\t$(function() {\n\t    $(\":contains('People You May Know')\").parents(\"._4ikz\").remove()\n// \t\t$('._42fz').each(function() {\n// \t\t\tconsole.log($(this).find('span'))\n// \t\t\tif ($(this).find('span').length < 1) {\n// \t\t\t\t$(this).hide()\n// \t\t\t}\n// \t\t})\n\t})\n// }, 3000)\n\n\n","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"google.com","js":"let href = \"\"\n$(\".g\").each(function() {\n\thref = $(this).find(\"a\").attr(\"href\")\n\tif (href.includes(\"w3schools\")) {\n\t\t$(this).hide()\n\t\treturn\n\t}\n\tif (href.includes(\"wordplays\")) {\n\t\thref = \"http://matthewmorrone.com/proxy/?url=\"+href\n\t}\n\t$(this).find(\"a\").attr(\"href\", href)\n})\n","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"http://matthewmorrone.com/proxy/?url=https://www.wordplays.com/crossword-solver/","js":"\nlet url = \"http://matthewmorrone.com/proxy/?url=https://www.wordplays.com/crossword-solver/\"\nsetTimeout(function() {\n\thistory.replaceState({}, \"\", url+location.href.split(\"/\").slice(-1)[0])\n}, 100)\n\n$(`[name=\"go\"]`).click(function(e) {\n\te.preventDefault()\n\twindow.location.href = url+$(\"#clue\").val().replace(\" \", \"-\")\n})\n\n\n","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":false,"autoImportant":false,"on":true}},{"compiledCss":"","css":"","id":"kipsu.com","js":"// $(function() {\n//     let room, vals\n//     setTimeout(function() {\n//         let room = jQuery(\"#roomNumber\").val()\n//         let vals = jQuery(\".guest-metadata input.tag-field.tag-value\").map(function() {\n//             return $(this).val()\n//         })\n//         vals = Array.from(vals)\n        \n//         $(document).on(\"click\", \".phone-fields__warning-message\", function(e) {\n//             e.preventDefault()\n//             console.log(room)\n//             console.log(vals)\n//             setTimeout(function() {\n//                 jQuery(\"#roomNumber\").val(room)\n//                 jQuery(\".guest-metadata input.tag-field.tag-value\").each(function(v, k) {\n//                     $(this).val(vals[k])\n//                 })\n//             }, 2000)\n//         })\n    \n//     }, 2000)\n    \n    \n    \n\n    \n    \n    \n    \n    \n// })","libs":["jQuery 3"],"options":{"altCSS":false,"altJS":true,"autoImportant":false,"on":true}},{"compiledCss":"#xwd-ad-top, #xwd-header, #xwd-mobile-cushion {display: none!important;}.set-game #set-game {position: static!important;}.set-game .set-game-container {position: static!important;}.set-game .set-game-result-section {right: -155px !important;}.sortable-placeholder {background-color: yellow!important; width: 173px!important; height: 102px!important;}","css":"#xwd-ad-top, #xwd-header, #xwd-mobile-cushion {\n\tdisplay: none;\n}\n.set-game #set-game {\n    overflow: '';\n    position: static;\n}\n.set-game .set-game-container {\n    position: static; \n}\n.set-game .set-game-result-section {\n    right: -155px !important;\n    /*pointer-events: none;*/\n}\n.sortable-placeholder {\n\tbackground-color: yellow;\n\twidth: 173px;\n    height: 102px;\n}\n\n","id":"https://www.nytimes.com/puzzles/set","js":"var precedence = {\r\n\t\"icon-set-red\": 1,\r\n\t\"icon-set-green\": 2,\r\n\t\"icon-set-purple\": 3,\r\n\t\"icon-set-quantity-1\": 1,\r\n\t\"icon-set-quantity-2\": 2,\r\n\t\"icon-set-quantity-3\": 3,\r\n\t\"icon-set-oval\": 1,\r\n\t\"icon-set-diamond\": 2,\r\n\t\"icon-set-squiggle\": 3,\r\n\t\"icon-set-oval-empty\": 1,\r\n\t\"icon-set-oval-solid\": 2,\r\n\t\"icon-set-oval-striped\": 3,\r\n\t\"icon-set-diamond-empty\": 4,\r\n\t\"icon-set-diamond-solid\": 5,\r\n\t\"icon-set-diamond-striped\": 6,\r\n\t\"icon-set-squiggle-empty\": 7,\r\n\t\"icon-set-squiggle-solid\": 8,\r\n\t\"icon-set-squiggle-striped\": 9,\r\n}\r\nsetTimeout(function() {\r\n    $(`.spaced-cards`).sortable()\r\n    for(let i = 1; i <= 3; i++) {\r\n\t    $(`.set-board .set-board-card`).each(function(j, o) {\r\n\t        $(o).removeAttr(\"style\")\r\n\t        if ($(o).find(\"svg\").length === i) {\r\n    \t        $(`.set-board`).append($(o))\r\n\t        }\r\n\t    })\t        \r\n    }\r\n}, 2000)\r\n$(function() {\r\n\t$(document).click(function() {\r\n\t    // $(`.set-board`).sortable()\r\n\t    $(`.spaced-cards`).sortable()\r\n\t    // $(`.set-board .set-board-card`).sortable()\r\n\t    $(`.spaced-cards`).each(function(j, o) {\r\n\t        $(this).sortable()\r\n\t    })\r\n\t})\r\n})\r\n","libs":["jQuery 3","jQuery UI 1.12.1"],"options":{"altCSS":true,"altJS":true,"autoImportant":true,"on":true}}]}
